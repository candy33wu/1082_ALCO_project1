#include<iostream>
#include<cstring>
#include<sstream>
#include<vector>
using namespace std;
vector<string> inputall,label;
vector<int>lbnum;

string toBin(string str,int n)
{
	bool neg = false;
	string ans = "00000000000000000000000000000000";
	string s;
	if(str[0]=='x')
		str=str.substr(1, str.length());
	if (str[0] == '-'){
		ans = "11111111111111111111111111111111";
		str = str.substr(1, str.length());
		neg = true;
	}

	int buffer;
	stringstream ss;
	ss << str;
	ss >> buffer;
	ss.str("");
	ss.clear();
	long long int total = 0, m = 1;
	
	while (buffer != 0) {
		total += ((buffer % 2) * m);
		buffer /= 2;
		m *= 10; 
	}
	ss << total;
	ss >> s;
	if (neg) {
		for (int i = 0; i < s.length(); ++i) {
			if (s[i] == '1')
				s[i] = '0';
			else
				s[i] = '1';
		}
		for (int i = s.length()-1; i >0 ; --i) {
			if (s[i] == '1')
				s[i] = '0';
			else {
				s[i] = '1';
				break;
			}
		}
	}
	ans += s;
	return ans.substr(ans.length() - n, ans.length());
}

int main()
{
	string input,temp;
	int p,pc;
	getline(cin, input);
	int cou = 0;
	while (input[0]!=cin.eof()) {
		 p = input.find("//", 0);
		if ( p!=input.npos) {
			input = input.substr(0,p);
		}
		inputall.push_back(input);
		getline(cin, input);
		cou++;
	}
	for (int i = 0; i < inputall.size(); ++i) {
		p = inputall[i].find(':', 0);
		if (p != inputall[i].npos) {

			label.push_back(inputall[i].substr(0, p));
			lbnum.push_back(i);
			if (p + 1 < inputall[i].length()) {
				inputall[i] = inputall[i].substr(p + 1, inputall[i].length());
				if (inputall[i][0] == ' ')
					inputall[i] = inputall[i].substr(1, inputall[i].length());
			}
		}
	}
	for (int i = 0; i < inputall.size(); ++i) {
		if (inputall[i].find("ui", 0) != inputall[i].npos) {
			uType(inputall[i],i);
		}
		else if (inputall[i][0] == 'l' || inputall[i].find("i", 0) != inputall[i].npos || inputall[i].find("jalr", 0) != inputall[i].npos) {
			iType(inputall[i],i);
		}
		else if (inputall[i][0] == 's' && inputall[i].find(" ", 0) == 2) {
			sType(inputall[i],i);
		}
		else if (inputall[i][0] == 'b') {
			bType(inputall[i],i);
		}
		else if (inputall[i].find("jal", 0) != inputall[i].npos) {
			ujType(inputall[i],i);
		}
		else {
			rType(inputall[i],i);
		}
	}
}