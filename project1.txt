#include<iostream>
#include<cstring>
#include<sstream>
#include<vector>
using namespace std;
vector<string> inputall,label;
vector<int>lbnum;

string toBin(string str,int n)
{
	bool neg = false;
	string ans = "00000000000000000000000000000000";
	string s;
	if(str[0]=='x')
		str=str.substr(1, str.length());
	if (str[0] == '-'){
		ans = "11111111111111111111111111111111";
		str = str.substr(1, str.length());
		neg = true;
	}

	int buffer;
	stringstream ss;
	ss << str;
	ss >> buffer;
	ss.str("");
	ss.clear();
	long long int total = 0, m = 1;
	
	while (buffer != 0) {
		total += ((buffer % 2) * m);
		buffer /= 2;
		m *= 10; 
	}
	ss << total;
	ss >> s;
	if (neg) {
		for (int i = 0; i < s.length(); ++i) {
			if (s[i] == '1')
				s[i] = '0';
			else
				s[i] = '1';
		}
		for (int i = s.length()-1; i >0 ; --i) {
			if (s[i] == '1')
				s[i] = '0';
			else {
				s[i] = '1';
				break;
			}
		}
	}
	ans += s;
	return ans.substr(ans.length() - n, ans.length());
}

string findoffset(string str,int pc,int limit) {
	int offset = 0;
	string ans;
	for (int i = 0; i < label.size(); ++i) {
		if (str == label[i]) {
			offset = 4*(lbnum[i] - pc);
			break;
		}
	}
	ans = to_string(offset);
	ans = toBin(ans, limit);
	return ans;
}

void rType(string input, int pc)
{
	string fun7, rs2, rs1, fun3, rd, op,str[4];
	int p;
	p = input.find(" ", 0);
	str[0] = input.substr(0, p);
	input = input.substr(p + 1, input.length());
	for(int i=1;i<4;i++){
		p = input.find(",", 0);
		str[i] = input.substr(0, p);
		input = input.substr(p + 1, input.length());
	}
	if (str[0] == "sub" || str[0] == "sra")
		fun7 = "0100000";
	else
		fun7 = "0000000";
	if (str[0] == "add" || str[0] == "sub")
		fun3 = "000";
	else if (str[0] == "sll")
		fun3 = "001";
	else if (str[0] == "slt")
		fun3 = "010";
	else if (str[0] == "sltu")
		fun3 = "011";
	else if (str[0] == "xor")
		fun3 = "100";
	else if (str[0] == "srl" || str[0] == "sra")
		fun3 = "101";
	else if (str[0] == "or")
		fun3 = "110";
	else
		fun3 = "111";
	
	op = "0110011";
	rs2 = toBin(str[3],5);
	rs1 = toBin(str[2],5);
	rd= toBin(str[1],5);
	cout << fun7 << " | " << rs2 << " | " << rs1 << " | " << fun3 << " | " << rd << " | " << op << endl;
}

int main()
{
	string input,temp;
	int p,pc;
	getline(cin, input);
	int cou = 0;
	while (input[0]!=cin.eof()) {
		 p = input.find("//", 0);
		if ( p!=input.npos) {
			input = input.substr(0,p);
		}
		inputall.push_back(input);
		getline(cin, input);
		cou++;
	}
	for (int i = 0; i < inputall.size(); ++i) {
		p = inputall[i].find(':', 0);
		if (p != inputall[i].npos) {

			label.push_back(inputall[i].substr(0, p));
			lbnum.push_back(i);
			if (p + 1 < inputall[i].length()) {
				inputall[i] = inputall[i].substr(p + 1, inputall[i].length());
				if (inputall[i][0] == ' ')
					inputall[i] = inputall[i].substr(1, inputall[i].length());
			}
		}
	}
	for (int i = 0; i < inputall.size(); ++i) {
		if (inputall[i].find("ui", 0) != inputall[i].npos) {
			uType(inputall[i],i);
		}
		else if (inputall[i][0] == 'l' || inputall[i].find("i", 0) != inputall[i].npos || inputall[i].find("jalr", 0) != inputall[i].npos) {
			iType(inputall[i],i);
		}
		else if (inputall[i][0] == 's' && inputall[i].find(" ", 0) == 2) {
			sType(inputall[i],i);
		}
		else if (inputall[i][0] == 'b') {
			bType(inputall[i],i);
		}
		else if (inputall[i].find("jal", 0) != inputall[i].npos) {
			ujType(inputall[i],i);
		}
		else {
			rType(inputall[i],i);
		}
	}
}